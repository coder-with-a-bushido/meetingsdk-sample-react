{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["ZoomMtg","setZoomJSLib","preLoadWasm","prepareWebSDK","i18n","load","reload","App","query","URLSearchParams","window","location","search","sdkKey","meetingNumber","get","leaveUrl","userName","passWord","className","onClick","e","preventDefault","fetch","method","headers","body","JSON","stringify","role","then","res","json","response","signature","document","getElementById","style","display","init","success","console","log","join","userEmail","tk","error","catch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"0PAKAA,UAAQC,aAAa,mCAAoC,OAEzDD,UAAQE,cACRF,UAAQG,gBAERH,UAAQI,KAAKC,KAAK,SAClBL,UAAQI,KAAKE,OAAO,SAiFLC,MA/Ef,WACE,IAAMC,EAAQ,IAAIC,gBAAgBC,OAAOC,SAASC,QAK9CC,EAAS,uCACTC,EAAgBN,EAAMO,IAAI,iBAE1BC,EAAW,8CACXC,EAAW,QAEXC,EAAWV,EAAMO,IAAI,OAwDzB,OACE,qBAAKI,UAAU,MAAf,SACE,iCACE,+DAEA,wBAAQC,QAvDd,SAAsBC,GACpBA,EAAEC,iBAEFC,MAjBsB,8CAiBG,CACvBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CACnBd,cAAeA,EACfe,KAlBK,MAqBNC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GAQX,IAAsBC,IAPHD,EAASC,UAQ1BC,SAASC,eAAe,cAAcC,MAAMC,QAAU,QAEtDtC,UAAQuC,KAAK,CACXvB,SAAUA,EACVwB,QAAS,SAACA,GACRC,QAAQC,IAAIF,GAEZxC,UAAQ2C,KAAK,CACXT,UAAWA,EACXpB,cAAeA,EACfG,SAAUA,EACVJ,OAAQA,EACR+B,UAxCQ,GAyCR1B,SAAUA,EACV2B,GArCc,GAsCdL,QAAS,SAACA,GACRC,QAAQC,IAAIF,IAEdM,MAAO,SAACA,GACNL,QAAQC,IAAII,OAIlBA,MAAO,SAACA,GACNL,QAAQC,IAAII,SA9BbC,OAAM,SAACD,GACNL,QAAQK,MAAMA,OAuCd,gCC1EOE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBpB,MAAK,YAAkD,IAA/CqB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFvB,SAASC,eAAe,SAM1BY,M","file":"static/js/main.90a16001.chunk.js","sourcesContent":["import React from \"react\";\n\nimport \"./App.css\";\nimport { ZoomMtg } from \"@zoomus/websdk\";\n\nZoomMtg.setZoomJSLib(\"https://source.zoom.us/2.3.5/lib\", \"/av\");\n\nZoomMtg.preLoadWasm();\nZoomMtg.prepareWebSDK();\n// loads language files, also passes any error messages to the ui\nZoomMtg.i18n.load(\"en-US\");\nZoomMtg.i18n.reload(\"en-US\");\n\nfunction App() {\n  const query = new URLSearchParams(window.location.search);\n\n  // setup your signature endpoint here: https://github.com/zoom/meetingsdk-sample-signature-node.js\n  var signatureEndpoint = \"https://peaceful-atoll-44848.herokuapp.com/\";\n  // This Sample App has been updated to use SDK App type credentials https://marketplace.zoom.us/docs/guides/build/sdk-app\n  var sdkKey = \"94QZmFkRMuRdfQT3u8eqwcOLLHouz5HaMWGd\";\n  var meetingNumber = query.get(\"meetingNumber\");\n  var role = 0;\n  var leaveUrl = \"https://www.youtube.com/watch?v=dQw4w9WgXcQ\";\n  var userName = \"React\";\n  var userEmail = \"\";\n  var passWord = query.get(\"pwd\");\n  // pass in the registrant's token if your meeting or webinar requires registration. More info here:\n  // Meetings: https://marketplace.zoom.us/docs/sdk/native-sdks/web/client-view/meetings#join-registered\n  // Webinars: https://marketplace.zoom.us/docs/sdk/native-sdks/web/client-view/webinars#join-registered\n  var registrantToken = \"\";\n\n  function getSignature(e) {\n    e.preventDefault();\n\n    fetch(signatureEndpoint, {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        meetingNumber: meetingNumber,\n        role: role,\n      }),\n    })\n      .then((res) => res.json())\n      .then((response) => {\n        startMeeting(response.signature);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  function startMeeting(signature) {\n    document.getElementById(\"zmmtg-root\").style.display = \"block\";\n\n    ZoomMtg.init({\n      leaveUrl: leaveUrl,\n      success: (success) => {\n        console.log(success);\n\n        ZoomMtg.join({\n          signature: signature,\n          meetingNumber: meetingNumber,\n          userName: userName,\n          sdkKey: sdkKey,\n          userEmail: userEmail,\n          passWord: passWord,\n          tk: registrantToken,\n          success: (success) => {\n            console.log(success);\n          },\n          error: (error) => {\n            console.log(error);\n          },\n        });\n      },\n      error: (error) => {\n        console.log(error);\n      },\n    });\n  }\n\n  return (\n    <div className=\"App\">\n      <main>\n        <h1>Zoom Meeting SDK Sample React</h1>\n\n        <button onClick={getSignature}>Join Meeting</button>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}